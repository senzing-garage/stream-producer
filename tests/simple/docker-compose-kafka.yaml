version: '3'
services:

  zookeeper:
    container_name: senzing-zookeeper
    environment:
#     See https://github.com/bitnami/bitnami-docker-zookeeper#configuration
      ALLOW_ANONYMOUS_LOGIN: "yes"
    image: bitnami/zookeeper:3.5.6
    networks:
      - backend
    ports:
      - 2181:2181
    restart: always

  kafka:
    container_name: senzing-kafka
    depends_on:
      - zookeeper
    environment:
#     See https://github.com/bitnami/bitnami-docker-kafka#configuration
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_NUM_PARTITIONS: 5
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    image: bitnami/kafka:2.4.0
    networks:
      - backend
    ports:
      - 9092:9092
    restart: always

  kafdrop:
    container_name: senzing-kafdrop
    depends_on:
      - kafka
    environment:
#     See https://github.com/obsidiandynamics/kafdrop#environment-variables
      KAFKA_BROKERCONNECT: "senzing-kafka:9092"
      JVM_OPTS: "-Xms32M -Xmx64M"
      SERVER_SERVLET_CONTEXTPATH: "/"
    image: obsidiandynamics/kafdrop:3.23.0
    networks:
      - backend
    ports:
      - 9179:9000
    restart: always

  streamproducer:
    container_name: senzing-stream-producer
    depends_on:
      - kafka
    environment:
#     See https://github.com/Senzing/stream-producer#configuration
      SENZING_DEFAULT_DATA_SOURCE: ${SENZING_DEFAULT_DATA_SOURCE:-TEST}
      SENZING_DELAY_IN_SECONDS: 30
      SENZING_KAFKA_BOOTSTRAP_SERVER: senzing-kafka:9092
      SENZING_KAFKA_TOPIC: senzing-kafka-topic
      SENZING_INPUT_URL: ${SENZING_INPUT_URL}
      SENZING_SUBCOMMAND: ${SENZING_INPUT_FORMAT:-json}-to-kafka
    image: senzing/stream-producer:${SENZING_DOCKER_IMAGE_VERSION_STREAM_PRODUCER:-latest}
    networks:
      - backend
    restart: on-failure

networks:
  backend:
